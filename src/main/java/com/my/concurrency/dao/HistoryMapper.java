package com.my.concurrency.dao;

import com.my.concurrency.models.History;
import com.my.concurrency.models.HistoryExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;


/**
 * Mapper interface for history, automatically generated by Mybatis-generator
 */
public interface HistoryMapper {
    /**
     * Use Mybatis Example class to count the number of historys which is meet the conditions of example
     *
     * @param example with selective conditions
     * @return the number of histories meet the conditions
     */
    long countByExample(HistoryExample example);

    /**
     * Use Mybatis Example class to delete histories which is meet the conditions of example
     *
     * @param example historyExample with selective conditions
     * @return the number of historys deleted
     */
    int deleteByExample(HistoryExample example);

    /**
     * Delete the history by primary key
     *
     * @param id the primary key of history
     * @return the number of histories deleted
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * Insert a history
     *
     * @param record one history instance
     * @return the number of histories insert
     */
    int insert(History record);

    /**
     * insert history selectively
     *
     * @param record a history instance
     * @return the number of history insert
     */
    int insertSelective(History record);

    /**
     * Use Mybatis Example class to get histories which is meet the conditions of example
     *
     * @param example historyExample with selective conditions
     * @return a list of histories meet the conditions
     */
    List<History> selectByExample(HistoryExample example);

    /**
     * Get the history by id
     *
     * @param id the id of history
     * @return a history instance
     */
    History selectByPrimaryKey(Integer id);

    /**
     * update historys selective using example
     *
     * @param record  a history instance
     * @param example a history example with where conditions
     * @return the number of affected history
     */
    int updateByExampleSelective(@Param("record") History record, @Param("example") HistoryExample example);

    /**
     * update histories by historyExample
     *
     * @param record  a history instance
     * @param example a history example with where conditions
     * @return the number of affected history
     */
    int updateByExample(@Param("record") History record, @Param("example") HistoryExample example);

    /**
     * update history selectively by primary key
     *
     * @param record the history instance to update
     * @return the number of affected history
     */
    int updateByPrimaryKeySelective(History record);

    /**
     * update history by primary key
     *
     * @param record the history instance to update
     * @return the number of affected history
     */
    int updateByPrimaryKey(History record);
}