package com.my.concurrency.dao;

import com.my.concurrency.models.Customer;
import com.my.concurrency.models.CustomerExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 * Mapper interface for customer, automatically generated by Mybatis-generator
 */
public interface CustomerMapper {
    /**
     * Use Mybatis Example class to count the number of customers which is meet the conditions of example
     *
     * @param example with selective conditions
     * @return the number of customers meet the conditions
     */
    long countByExample(CustomerExample example);

    /**
     * Use Mybatis Example class to delete customers which is meet the conditions of example
     *
     * @param example CustomerExample with selective conditions
     * @return the number of customers deleted
     */
    int deleteByExample(CustomerExample example);


    /**
     * Delete the customer by primary key
     *
     * @param id the primary key of customer
     * @return the number of customers deleted
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * Insert a customer
     *
     * @param record one customer instance
     * @return the number of customers insert
     */
    int insert(Customer record);

    /**
     * Insert a customer and get the primary key (id) thereof
     *
     * @param record a customer instance
     * @return the primary key (id) of the inserted customer
     */
    int insertAndGetId(Customer record);

    /**
     * insert customer selectively
     *
     * @param record a customer instance
     * @return the number of customer insert
     */
    int insertSelective(Customer record);

    /**
     * Use Mybatis Example class to get customers which is meet the conditions of example
     *
     * @param example CustomerExample with selective conditions
     * @return a list of customers meet the conditions
     */
    List<Customer> selectByExample(CustomerExample example);

    /**
     * Get customer by id
     *
     * @param id the id of customer
     * @return a customer instance
     */
    Customer selectByPrimaryKey(Integer id);

    /**
     * update customers selective using example
     *
     * @param record  a customer instance
     * @param example a customer example with where conditions
     * @return the number of affected customer
     */
    int updateByExampleSelective(@Param("record") Customer record, @Param("example") CustomerExample example);

    /**
     * update customers by CustomerExample
     *
     * @param record  a customer instance
     * @param example a customer example with where conditions
     * @return the number of affected customer
     */
    int updateByExample(@Param("record") Customer record, @Param("example") CustomerExample example);


    /**
     * update customer selectively by primary key
     *
     * @param record the customer instance to update
     * @return the number of affected customer
     */
    int updateByPrimaryKeySelective(Customer record);

    /**
     * update customer by primary key
     *
     * @param record the customer instance to update
     * @return the number of affected customer
     */
    int updateByPrimaryKey(Customer record);
}